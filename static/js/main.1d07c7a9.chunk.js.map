{"version":3,"sources":["components/Good/Good.js","components/GoodList/GoodList.js","App.js","index.js"],"names":["Good","props","addItem","changeButtonName","item","className","type","onClick","event","GoodList","goodsPrepared","map","good","key","id","index","App","state","goodsSelected","goodsSelectedCurrent","includes","splice","indexOf","push","setState","reset","this","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAiCeA,G,MA9BF,SAACC,GAAW,IACfC,EAAoCD,EAApCC,QAASC,EAA2BF,EAA3BE,iBAAkBC,EAASH,EAATG,KAEnC,OACE,wBACEC,UAC6B,QAA3BF,EAAiBC,GACb,YACA,iCAGLA,EAED,4BACEC,UAAU,gCACVC,KAAK,SACLC,QAAS,SAAAC,GAAK,OAAIN,EAAQM,EAAOJ,KAEhCD,EAAiBC,OCYXK,EA5BE,SAACR,GAAW,IACnBS,EAA6CT,EAA7CS,cAAeR,EAA8BD,EAA9BC,QAASC,EAAqBF,EAArBE,iBAEhC,OACE,wBAAIE,UAAU,iBACXK,EAAcC,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,eACEC,IAAKD,EAAKE,IACNF,EAFN,CAGEV,QAASA,EACTC,iBAAkBA,UCGtBO,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCC,KAAI,SAACC,EAAMG,GAAP,MAAkB,CAC1DD,GAAIC,EACJX,KAAMQ,MAoEOI,E,4MAhEbC,MAAQ,CACNC,cAAe,I,EAGjBhB,QAAU,SAACM,EAAOJ,GAChB,IAAMe,EAAoB,YAAO,EAAKF,MAAMC,eAExCC,EAAqBC,SAAShB,GAChCe,EAAqBE,OAAOF,EAAqBG,QAAQlB,GAAO,GAEhEe,EAAqBI,KAAKnB,GAG5B,EAAKoB,SAAS,CACZN,cAAc,YAAKC,M,EAIvBhB,iBAAmB,SAACC,GAClB,OAAI,EAAKa,MAAMC,cAAcE,SAAShB,GAC7B,SAGF,O,EAGTqB,MAAQ,WACN,EAAKD,SAAS,CACZN,cAAe,M,uDAIT,IACAA,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eAAd,kBAGA,yBAAKA,UAAU,sBACZa,EAAcS,KAAK,OAGtB,4BACEtB,UAAU,cACVC,KAAK,SACLC,QAASmB,KAAKD,OAHhB,UASF,kBAAC,EAAD,CACEf,cAAeA,EACfR,QAASwB,KAAKxB,QACdC,iBAAkBuB,KAAKvB,wB,GA1DfyB,IAAMC,WCnBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1d07c7a9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Good = (props) => {\n  const { addItem, changeButtonName, item } = props;\n\n  return (\n    <li\n      className={\n        changeButtonName(item) === 'add'\n          ? 'app__good'\n          : 'app__good app__good--selected'\n      }\n    >\n      {item}\n\n      <button\n        className=\"app__button app__button--dark\"\n        type=\"button\"\n        onClick={event => addItem(event, item)}\n      >\n        {changeButtonName(item)}\n      </button>\n    </li>\n  );\n};\n\nGood.propTypes = {\n  item: PropTypes.string.isRequired,\n  addItem: PropTypes.func.isRequired,\n  changeButtonName: PropTypes.func.isRequired,\n};\n\nexport default Good;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Good from '../Good/Good';\n\nconst GoodList = (props) => {\n  const { goodsPrepared, addItem, changeButtonName } = props;\n\n  return (\n    <ul className=\"app__goodList\">\n      {goodsPrepared.map(good => (\n        <Good\n          key={good.id}\n          {...good}\n          addItem={addItem}\n          changeButtonName={changeButtonName}\n        />\n      ))}\n    </ul>\n  );\n};\n\nGoodList.propTypes = {\n  goodsPrepared: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      item: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  addItem: PropTypes.func.isRequired,\n  changeButtonName: PropTypes.func.isRequired,\n};\n\nexport default GoodList;\n","import React from 'react';\nimport './App.scss';\n\nimport GoodList from './components/GoodList/GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsPrepared = goodsFromServer.map((good, index) => ({\n  id: index,\n  item: good,\n}));\n\nclass App extends React.Component {\n  state = {\n    goodsSelected: [],\n  };\n\n  addItem = (event, item) => {\n    const goodsSelectedCurrent = [...this.state.goodsSelected];\n\n    if (goodsSelectedCurrent.includes(item)) {\n      goodsSelectedCurrent.splice(goodsSelectedCurrent.indexOf(item), 1);\n    } else {\n      goodsSelectedCurrent.push(item);\n    }\n\n    this.setState({\n      goodsSelected: [...goodsSelectedCurrent],\n    });\n  };\n\n  changeButtonName = (item) => {\n    if (this.state.goodsSelected.includes(item)) {\n      return 'remove';\n    }\n\n    return 'add';\n  };\n\n  reset = () => {\n    this.setState({\n      goodsSelected: [],\n    });\n  }\n\n  render() {\n    const { goodsSelected } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__info\">\n          <h1 className=\"app__header\">\n            Selected good:\n          </h1>\n          <div className=\"app__goodsSelected\">\n            {goodsSelected.join(', ')}\n          </div>\n\n          <button\n            className=\"app__button\"\n            type=\"button\"\n            onClick={this.reset}\n          >\n            reset\n          </button>\n        </div>\n\n        <GoodList\n          goodsPrepared={goodsPrepared}\n          addItem={this.addItem}\n          changeButtonName={this.changeButtonName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}